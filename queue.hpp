#ifndef QUEUE_HPP
#define QUEUE_HPP
/*********************************************************************
*
*   HEADER:
*       header file for queue
*
*   NOTE:
*       queue is not thread safe and needs to be protected by the user
*
*   Copyright 2024 Nate Lenze
*
****************a*****************************************************/
/*--------------------------------------------------------------------
                              INCLUDES
--------------------------------------------------------------------*/
#include <array>
/*--------------------------------------------------------------------
                          GLOBAL NAMESPACES
--------------------------------------------------------------------*/
namespace utl {
/*--------------------------------------------------------------------
                          LITERAL CONSTANTS
--------------------------------------------------------------------*/

/*--------------------------------------------------------------------
                            TYPES/ENUMS
--------------------------------------------------------------------*/

/*--------------------------------------------------------------------
                           MEMORY CONSTANTS
--------------------------------------------------------------------*/

/*--------------------------------------------------------------------
                              VARIABLES
--------------------------------------------------------------------*/

/*--------------------------------------------------------------------
                                MACROS
--------------------------------------------------------------------*/

/*--------------------------------------------------------------------
                              PROCEDURES
--------------------------------------------------------------------*/

/*--------------------------------------------------------------------
                               CLASSES
--------------------------------------------------------------------*/

template <int N, typename T>
class queue 
    {
    public:
        queue();
        ~queue();
        bool is_empty( void );
        bool is_full( void );
        void empty( void );
        T front( void );
        void pop( void );
        bool push( T item );
        int size( void );
    private:
        std::array<T, N> p_data;
        std::array<T, N>::iterator p_front_itr;
        std::array<T, N>::iterator p_tail_itr;
        int p_size;
    };


} /* namespace utl */
#endif
